"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[85787],{87492:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var i=a(87462),n=(a(67294),a(3905));a(61839);const r={title:"DORA - Change Failure Rate(WIP)",description:"DORA - Change Failure Rate\n",sidebar_position:21},l=void 0,o={unversionedId:"Metrics/CFR",id:"version-v0.13/Metrics/CFR",title:"DORA - Change Failure Rate(WIP)",description:"DORA - Change Failure Rate\n",source:"@site/versioned_docs/version-v0.13/Metrics/CFR.md",sourceDirName:"Metrics",slug:"/Metrics/CFR",permalink:"/docs/v0.13/Metrics/CFR",draft:!1,editUrl:"https://github.com/apache/incubator-devlake-website/edit/main/versioned_docs/version-v0.13/Metrics/CFR.md",tags:[],version:"v0.13",sidebarPosition:21,frontMatter:{title:"DORA - Change Failure Rate(WIP)",description:"DORA - Change Failure Rate\n",sidebar_position:21},sidebar:"docsSidebar",previous:{title:"DORA - Mean Time to Restore Service",permalink:"/docs/v0.13/Metrics/MTTR"},next:{title:"Data Models",permalink:"/docs/v0.13/DataModels"}},s={},u=[{value:"What is this metric?",id:"what-is-this-metric",level:2},{value:"Why is it important?",id:"why-is-it-important",level:2},{value:"Which dashboard(s) does it exist in",id:"which-dashboards-does-it-exist-in",level:2},{value:"How is it calculated?",id:"how-is-it-calculated",level:2},{value:"How to improve?",id:"how-to-improve",level:2}],d={toc:u};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"what-is-this-metric"},"What is this metric?"),(0,n.kt)("p",null,"The percentage of changes that were made to a code that then resulted in incidents, rollbacks, or any type of production failure."),(0,n.kt)("h2",{id:"why-is-it-important"},"Why is it important?"),(0,n.kt)("p",null,"Unlike Deployment Frequency and Lead Time for Changes that measure the throughput, Change Failure Rate measures the stability and quality of software delivery. A low CFR reflects a bad end-user experience as the production failure is relatively high."),(0,n.kt)("h2",{id:"which-dashboards-does-it-exist-in"},"Which dashboard(s) does it exist in"),(0,n.kt)("p",null,"N/A"),(0,n.kt)("h2",{id:"how-is-it-calculated"},"How is it calculated?"),(0,n.kt)("p",null,"The number of failures per the number of deployments. For example, if there are five deployments in a day and one causes a failure, that is a 20% change failure rate."),(0,n.kt)("p",null,"As you can see, there is not much distinction between performance benchmarks for CFR:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Groups"),(0,n.kt)("th",{parentName:"tr",align:null},"Benchmarks"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Elite performers"),(0,n.kt)("td",{parentName:"tr",align:null},"0%-15%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"High performers"),(0,n.kt)("td",{parentName:"tr",align:null},"16%-30%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Medium performers"),(0,n.kt)("td",{parentName:"tr",align:null},"16%-30%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Low performers"),(0,n.kt)("td",{parentName:"tr",align:null},"16%-30%")))),(0,n.kt)("p",null,(0,n.kt)("i",null,"Source: 2021 Accelerate State of DevOps, Google")),(0,n.kt)("b",null,"Data Sources Required"),(0,n.kt)("p",null,"This metric relies on:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Deployments")," collected in one of the following ways:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Open APIs of Jenkins, GitLab, GitHub, etc."),(0,n.kt)("li",{parentName:"ul"},"Webhook for general CI tools."),(0,n.kt)("li",{parentName:"ul"},"Releases and PR/MRs from GitHub, GitLab APIs, etc."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Incidents")," collected in one of the following ways:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Issue tracking tools such as Jira, TAPD, GitHub, etc."),(0,n.kt)("li",{parentName:"ul"},"Incident or Service Monitoring tools such as PagerDuty, ServiceNow, etc.")))),(0,n.kt)("b",null,"Transformation Rules Required"),(0,n.kt)("p",null,"This metric relies on:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Deployment configuration in Jenkins, GitLab or GitHub transformation rules to let DevLake know what CI builds/jobs can be regarded as ",(0,n.kt)("inlineCode",{parentName:"li"},"Deployments"),"."),(0,n.kt)("li",{parentName:"ul"},"Incident configuration in Jira, GitHub or TAPD transformation rules to let DevLake know what CI builds/jobs can be regarded as ",(0,n.kt)("inlineCode",{parentName:"li"},"Incidents"),".")),(0,n.kt)("h2",{id:"how-to-improve"},"How to improve?"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Add unit tests for all new feature"),(0,n.kt)("li",{parentName:"ul"},'"Shift left", start QA early and introduce more automated tests'),(0,n.kt)("li",{parentName:"ul"},"Enforce code review if it's not strictly executed")))}c.isMDXComponent=!0}}]);